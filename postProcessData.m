function postProcessData(varargin)
% this function generate latex table for output errors in specified folder
folder='';
isprint=false; % print on screen
for i=1:nargin
    line = varargin{i};
    if(strncmp(line,'-f=',3))
        folder = line(4:end);
    end
    if(strcmp(line,'-p'))
        isprint=true;
    end   
end
if strcmp(folder,'')
    fprintf('Provide the folder name that holds the data\n\n')
    fprintf('Usage:\npostProcessData -f=folder_name [-p (print ratios on screen)]\n')
    return
end


filename = strcat(folder,'/',folder,'errors.txt'); % input data
texfilename = strcat(folder,'/',folder,'Table.tex'); % output tex table



fid = fopen(filename);

%fid2 = fopen('temp.txt','w');
%isSkip = true;
fgetl(fid); % read ------> , discard 


eof = false;
gridNumber = 0;
while (~eof)
    gridNumber=gridNumber+1;
    Linf = fgetl(fid);
    L2 = fgetl(fid);
    H1 = fgetl(fid);
    eof = ~ischar(fgetl(fid));
    error.Linf(gridNumber,:) = sscanf(Linf,'%f %f %f %f')';
    error.L2(gridNumber,:) = sscanf(L2,'%f %f %f %f')';
    error.H1(gridNumber,:) = sscanf(H1,'%f %f %f %f')';
end

fclose(fid);
ratios.Linf = zeros(size(error.Linf));
ratios.L2 = zeros(size(error.L2));
ratios.H1 = zeros(size(error.H1));

ratios.Linf(2:end,:) = error.Linf(1:end-1,:)./error.Linf(2:end,:);
ratios.L2(2:end,:) = error.L2(1:end-1,:)./error.L2(2:end,:);
ratios.H1(2:end,1:end-1) = error.H1(1:end-1,1:end-1)./error.H1(2:end,1:end-1);

if(isprint)
    ratios.Linf
    ratios.L2
    ratios.H1
end


% write latex table
% latexformat = GN, ErrU, ratio ,ErrV, ratio, Errp, ratio, Errdiv, ratio
latexformat = '%s & %5.2e & %5.2f  & %5.2e  & %5.2f  & %5.2e  & %5.2f  & %5.2e  & %5.2f \\\\ \\hline\n';

rateformat ='rate & %5.2f &        & %5.2f  &        & %5.2f  &        & %5.2f  &       \\\\ \\hline\n';      
   
fid = fopen(texfilename,'w');
fprintf(fid,'%% this tex file is generated by postProcessData.m\n\n\n\n');
fprintf(fid,'\\begin{figure}[hbt] \n\\begin{center}');


% Linf norm table
fprintf(fid,'\n\n\n\\begin{tabular}{|c|c|c|c|c|c|c|c|c|} \\hline \n');
%fprintf(fid,'\\multicolumn{9}{|c|}{\\strutt $L_{\inf}$ norm} \\\\ \\hline \n');
fprintf(fid,'\\strutt~~$G_j$~~& $||E_j^{(u)}||_{\\infty}$ & $r$ & $||E_j^{(v)}||_{\\infty}$ & $r$ & $||E_j^{(p)}||_{\\infty}$ & $r$ & $||E_j^{\\nabla\\cdot \\uv}||_{\\infty}$  & $r$  \\\\ \\hline \n');
for i=1:gridNumber
   fprintf(fid,latexformat,strcat('G',num2str(i)),error.Linf(i,1),ratios.Linf(i,1),error.Linf(i,2),ratios.Linf(i,2),error.Linf(i,3),ratios.Linf(i,3),error.Linf(i,4), ratios.Linf(i,4)); 
end
fprintf(fid,'\\end{tabular}\n');


% L2 norm table
fprintf(fid,'\n\n\n\\begin{tabular}{|c|c|c|c|c|c|c|c|c|} \\hline \n');
%fprintf(fid,'\\multicolumn{9}{|c|}{\\strutt $L_{\inf}$ norm} \\\\ \\hline \n');
fprintf(fid,'\\strutt~~$G_j$~~& $||E_j^{(u)}||_{2}$ & $r$ & $||E_j^{(v)}||_{2}$ & $r$ & $||E_j^{(p)}||_{2}$ & $r$ & $||E_j^{\\nabla\\cdot \\uv}||_{2}$  & $r$  \\\\ \\hline \n');
for i=1:gridNumber
   fprintf(fid,latexformat,strcat('G',num2str(i)),error.L2(i,1),ratios.L2(i,1),error.L2(i,2),ratios.L2(i,2),error.L2(i,3),ratios.L2(i,3),error.L2(i,4),ratios.L2(i,4)); 
end
fprintf(fid,'\\end{tabular}\n');


% H1 norm table
fprintf(fid,'\n\n\n\\begin{tabular}{|c|c|c|c|c|c|c|c|c|} \\hline \n');
%fprintf(fid,'\\multicolumn{9}{|c|}{\\strutt $L_{\inf}$ norm} \\\\ \\hline \n');
fprintf(fid,'\\strutt~~$G_j$~~& $|E_j^{(u)}|_{H_1}$ & $r$ & $|E_j^{(v)}|_{H_1}$ & $r$ & $|E_j^{(p)}|_{H_1}$ & $r$ & $|E_j^{\\nabla\\cdot \\uv}|_{H_1}$  & $r$  \\\\ \\hline \n');
for i=1:gridNumber
   fprintf(fid,latexformat,strcat('G',num2str(i)),error.H1(i,1),ratios.H1(i,1),error.H1(i,2),ratios.H1(i,2),error.H1(i,3),ratios.H1(i,3),error.H1(i,4),ratios.H1(i,4)); 
end
fprintf(fid,'\\end{tabular}\n');


fprintf(fid,'\\caption{%s}\n', folder);
fprintf(fid,'\\end{center}\n');
fprintf(fid,'\\end{figure}\n');
fclose(fid);





end